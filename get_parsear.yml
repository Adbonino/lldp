---
- name: Obtener y parsear vecinos LLDP
  hosts: all
  gather_facts: no
  tasks:
    - name: Ejecutar show lldp neighbors
      tags: test
      cisco.ios.ios_command:
        commands:
          - show lldp neighbors
      register: lldp_raw

    - name: Mostrar lista de vecinos LLDP parseados
      tags: test
      debug:
        var: lldp_raw

    - name: Filtrar líneas con vecinos LLDP (líneas que contienen Eth)
      tags: test
      set_fact:
        lldp_lines: >-
          {{
            (lldp_raw.stdout_lines if lldp_raw.stdout is string else (lldp_raw.stdout[0] | default('')))
            .split('\n')
            | select('search', 'Eth')
            | list
          }}
      register: lldp_filtrar

    - name: Mostrar lista de vecinos LLDP parseados
      tags: test
      debug:
        var: lldp_filtrar

    - name: Parsear líneas en diccionarios
      set_fact:
        lldp_list: >-
          {{
            lldp_raw.stdout[0]
            | split('\n')
            | reject('search', '^Capability|^Device ID|^Total entries|^$')
            | map('regex_search', '^(\\S+)\\s+(Eth\\S+)\\s+\\d+\\s+\\S+\\s+(Eth\\S+)', '\\1,\\2,\\3')
            | reject('equalto', None)
            | map('split', ',')
            | map('list')
            | map('combine', ['device_id', 'local_interface', 'port_id'])
            | list
          }}

    - name: Mostrar lista de vecinos LLDP parseados
      debug:
        var: lldp_list

    - name: Guardar vecinos LLDP en archivo JSON local
      copy:
        content: "{{ lldp_list | to_nice_json }}"
        dest: "./lldp_{{ inventory_hostname }}.json"
      delegate_to: localhost
